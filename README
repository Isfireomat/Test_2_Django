Задание:
  1. Разработать приложение для управления книгами в библиотеке с помощью python django. 
  Приложение должно позволять пользователям добавлять книги, просматривать список всех книг, получать подробную информацию о конкретной книге.
  2. Разработать эндпоинт, который будет выдавать список книг с ранжирование по количеству страниц в отдельном поле в указанный период. 
  Так же прикрепить реализацию этого запроса в виде sql.
  3. Разработать периодическую задачу, которая будет выполняться раз в 10 минут(время конфигурируется с помощью env) и отправлять на почту(почта конфигурируется с помощью env)
  4. Настроить docker compose для запуска проекта.

.env файлы существует для вашего удобства, внесите недостающие данные.

Поднятие контейнера:
  docker-compose up --build 
Миграция в БД:
  docker-compose exec app poetry run python manage.py migrate
Тестирование API:
  docker-compose exec app poetry run pytest
Запуск воркеров:
  docker-compose exec app poetry run celery -A celery_utils  worker --loglevel=info --concurrency=4
Запуск beat:
  docker-compose exec app poetry run celery -A celery_utils  beat --loglevel=info
Команда для поднятия отправки писем:
  docker-compose exec app poetry run python manage.py repeat_send_email up --email {email} --time {minutes}
Команда для остановки отправки писем:
  docker-compose exec app poetry run python manage.py repeat_send_email down
Команда дял остановки контейнера:
  docker-compose down

Документация:
  http://localhost:8000/api/schema/swagger-ui/

Реализация запроса в виде SQL: 
  SELECT 
    title, 
    author, 
    genre, 
    count_pages, 
    published_date, 
    RANK() OVER(ORDER BY count_pages DESC) AS rank 
  FROM 
    book 
  WHERE published_date BETWEN "2013-11-25" AND "2019-11-25"